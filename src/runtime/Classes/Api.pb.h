// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "Source_context.pb.h"
#import "Type.pb.h"
// @@protoc_insertion_point(imports)

@class Any;
@class AnyBuilder;
@class Api;
@class ApiBuilder;
@class Enum;
@class EnumBuilder;
@class EnumValue;
@class EnumValueBuilder;
@class Field;
@class FieldBuilder;
@class Method;
@class MethodBuilder;
@class Mixin;
@class MixinBuilder;
@class Option;
@class OptionBuilder;
@class SourceContext;
@class SourceContextBuilder;
@class Type;
@class TypeBuilder;



@interface ApiRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define Api_name @"name"
#define Api_methods @"methods"
#define Api_options @"options"
#define Api_version @"version"
#define Api_source_context @"sourceContext"
#define Api_mixins @"mixins"
#define Api_syntax @"syntax"
@interface Api : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasName_:1;
  BOOL hasVersion_:1;
  BOOL hasSourceContext_:1;
  BOOL hasSyntax_:1;
  NSString* name;
  NSString* version;
  SourceContext* sourceContext;
  Syntax syntax;
  NSMutableArray * methodsArray;
  NSMutableArray * optionsArray;
  NSMutableArray * mixinsArray;
}
- (BOOL) hasName;
- (BOOL) hasVersion;
- (BOOL) hasSourceContext;
- (BOOL) hasSyntax;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSArray<Method*> * methods;
@property (readonly, strong) NSArray<Option*> * options;
@property (readonly, strong) NSString* version;
@property (readonly, strong) SourceContext* sourceContext;
@property (readonly, strong) NSArray<Mixin*> * mixins;
@property (readonly) Syntax syntax;
- (Method*)methodsAtIndex:(NSUInteger)index;
- (Option*)optionsAtIndex:(NSUInteger)index;
- (Mixin*)mixinsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ApiBuilder*) builder;
+ (ApiBuilder*) builder;
+ (ApiBuilder*) builderWithPrototype:(Api*) prototype;
- (ApiBuilder*) toBuilder;

+ (Api*) parseFromData:(NSData*) data;
+ (Api*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Api*) parseFromInputStream:(NSInputStream*) input;
+ (Api*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Api*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Api*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ApiBuilder : PBGeneratedMessageBuilder {
@private
  Api* resultApi;
}

- (Api*) defaultInstance;

- (ApiBuilder*) clear;
- (ApiBuilder*) clone;

- (Api*) build;
- (Api*) buildPartial;

- (ApiBuilder*) mergeFrom:(Api*) other;
- (ApiBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ApiBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (ApiBuilder*) setName:(NSString*) value;
- (ApiBuilder*) clearName;

- (NSMutableArray<Method*> *)methods;
- (Method*)methodsAtIndex:(NSUInteger)index;
- (ApiBuilder *)addMethods:(Method*)value;
- (ApiBuilder *)setMethodsArray:(NSArray<Method*> *)array;
- (ApiBuilder *)clearMethods;

- (NSMutableArray<Option*> *)options;
- (Option*)optionsAtIndex:(NSUInteger)index;
- (ApiBuilder *)addOptions:(Option*)value;
- (ApiBuilder *)setOptionsArray:(NSArray<Option*> *)array;
- (ApiBuilder *)clearOptions;

- (BOOL) hasVersion;
- (NSString*) version;
- (ApiBuilder*) setVersion:(NSString*) value;
- (ApiBuilder*) clearVersion;

- (BOOL) hasSourceContext;
- (SourceContext*) sourceContext;
- (ApiBuilder*) setSourceContext:(SourceContext*) value;
- (ApiBuilder*) setSourceContextBuilder:(SourceContextBuilder*) builderForValue;
- (ApiBuilder*) mergeSourceContext:(SourceContext*) value;
- (ApiBuilder*) clearSourceContext;

- (NSMutableArray<Mixin*> *)mixins;
- (Mixin*)mixinsAtIndex:(NSUInteger)index;
- (ApiBuilder *)addMixins:(Mixin*)value;
- (ApiBuilder *)setMixinsArray:(NSArray<Mixin*> *)array;
- (ApiBuilder *)clearMixins;

- (BOOL) hasSyntax;
- (Syntax) syntax;
- (ApiBuilder*) setSyntax:(Syntax) value;
- (ApiBuilder*) clearSyntax;
@end

#define Method_name @"name"
#define Method_request_type_url @"requestTypeUrl"
#define Method_request_streaming @"requestStreaming"
#define Method_response_type_url @"responseTypeUrl"
#define Method_response_streaming @"responseStreaming"
#define Method_options @"options"
#define Method_syntax @"syntax"
@interface Method : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRequestStreaming_:1;
  BOOL hasResponseStreaming_:1;
  BOOL hasName_:1;
  BOOL hasRequestTypeUrl_:1;
  BOOL hasResponseTypeUrl_:1;
  BOOL hasSyntax_:1;
  BOOL requestStreaming_:1;
  BOOL responseStreaming_:1;
  NSString* name;
  NSString* requestTypeUrl;
  NSString* responseTypeUrl;
  Syntax syntax;
  NSMutableArray * optionsArray;
}
- (BOOL) hasName;
- (BOOL) hasRequestTypeUrl;
- (BOOL) hasRequestStreaming;
- (BOOL) hasResponseTypeUrl;
- (BOOL) hasResponseStreaming;
- (BOOL) hasSyntax;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* requestTypeUrl;
- (BOOL) requestStreaming;
@property (readonly, strong) NSString* responseTypeUrl;
- (BOOL) responseStreaming;
@property (readonly, strong) NSArray<Option*> * options;
@property (readonly) Syntax syntax;
- (Option*)optionsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MethodBuilder*) builder;
+ (MethodBuilder*) builder;
+ (MethodBuilder*) builderWithPrototype:(Method*) prototype;
- (MethodBuilder*) toBuilder;

+ (Method*) parseFromData:(NSData*) data;
+ (Method*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Method*) parseFromInputStream:(NSInputStream*) input;
+ (Method*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Method*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Method*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MethodBuilder : PBGeneratedMessageBuilder {
@private
  Method* resultMethod;
}

- (Method*) defaultInstance;

- (MethodBuilder*) clear;
- (MethodBuilder*) clone;

- (Method*) build;
- (Method*) buildPartial;

- (MethodBuilder*) mergeFrom:(Method*) other;
- (MethodBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MethodBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (MethodBuilder*) setName:(NSString*) value;
- (MethodBuilder*) clearName;

- (BOOL) hasRequestTypeUrl;
- (NSString*) requestTypeUrl;
- (MethodBuilder*) setRequestTypeUrl:(NSString*) value;
- (MethodBuilder*) clearRequestTypeUrl;

- (BOOL) hasRequestStreaming;
- (BOOL) requestStreaming;
- (MethodBuilder*) setRequestStreaming:(BOOL) value;
- (MethodBuilder*) clearRequestStreaming;

- (BOOL) hasResponseTypeUrl;
- (NSString*) responseTypeUrl;
- (MethodBuilder*) setResponseTypeUrl:(NSString*) value;
- (MethodBuilder*) clearResponseTypeUrl;

- (BOOL) hasResponseStreaming;
- (BOOL) responseStreaming;
- (MethodBuilder*) setResponseStreaming:(BOOL) value;
- (MethodBuilder*) clearResponseStreaming;

- (NSMutableArray<Option*> *)options;
- (Option*)optionsAtIndex:(NSUInteger)index;
- (MethodBuilder *)addOptions:(Option*)value;
- (MethodBuilder *)setOptionsArray:(NSArray<Option*> *)array;
- (MethodBuilder *)clearOptions;

- (BOOL) hasSyntax;
- (Syntax) syntax;
- (MethodBuilder*) setSyntax:(Syntax) value;
- (MethodBuilder*) clearSyntax;
@end

#define Mixin_name @"name"
#define Mixin_root @"root"
@interface Mixin : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasName_:1;
  BOOL hasRoot_:1;
  NSString* name;
  NSString* root;
}
- (BOOL) hasName;
- (BOOL) hasRoot;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* root;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MixinBuilder*) builder;
+ (MixinBuilder*) builder;
+ (MixinBuilder*) builderWithPrototype:(Mixin*) prototype;
- (MixinBuilder*) toBuilder;

+ (Mixin*) parseFromData:(NSData*) data;
+ (Mixin*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Mixin*) parseFromInputStream:(NSInputStream*) input;
+ (Mixin*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Mixin*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Mixin*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MixinBuilder : PBGeneratedMessageBuilder {
@private
  Mixin* resultMixin;
}

- (Mixin*) defaultInstance;

- (MixinBuilder*) clear;
- (MixinBuilder*) clone;

- (Mixin*) build;
- (Mixin*) buildPartial;

- (MixinBuilder*) mergeFrom:(Mixin*) other;
- (MixinBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MixinBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (MixinBuilder*) setName:(NSString*) value;
- (MixinBuilder*) clearName;

- (BOOL) hasRoot;
- (NSString*) root;
- (MixinBuilder*) setRoot:(NSString*) value;
- (MixinBuilder*) clearRoot;
@end


// @@protoc_insertion_point(global_scope)
